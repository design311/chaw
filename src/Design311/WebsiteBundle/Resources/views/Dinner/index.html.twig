{% extends 'Design311WebsiteBundle::layout.html.twig' %}

{% block content %}

<div id="map" class="map"></div>

<div class="content">
	<div class="container">
		<div class="filters">
		<p><a href="{{ path('design311website_dinners_add') }}">Dinner toevoegen</a></p>
			<p><strong>Filter de zoekresultaten</strong></p>
			<p><label for="locatie"><strong>Locatie</strong></label></p>
			<p><input type="text" id="locatie"></p>
			<p>TIP: Versleep de kaart om te filteren</p>
			{% for filter in filters %}
					<p><strong>{{filter.name}}</strong></p>
					{% for child in filter.children %}
							<p><input type="checkbox" name="{{filter.name|lower}}" value="{{child.value|lower}}" id="{{child.value|lower}}"> <label for="{{child.value|lower}}">{{child.value}}</label></p>
					{% endfor %}
			{% endfor %}
		</div>
		<table id="dinners">
			<thead>
				<tr>
					<th>Datum</th>
					<th>Titel</th>
					<th>Plaats</th>
					<th>Prijs</th>
				</tr>
			</thead>
			<tbody>
				{% for dinner in dinners %}
				<tr>
					<td>{{dinner.date|date('d-m-Y')}}</td>
					<td>{{dinner.title}}</td>
					<td>{{dinner.address.city}}</td>
					<td>{{dinner.price}}</td>
				</tr>
				{% endfor %}
			</tbody>
		</table>
	</div>
</div>
{% endblock %}

{% block footer %}
		<script src="http://maps.google.com/maps/api/js?sensor=false"></script>
	<script src="{{ asset('bundles/design311website/js/maps.markerclusterer.js') }}"></script>
	<script type="text/javascript">

		$(function(){
			var map;
			var markers = [];
			var geocoder = new google.maps.Geocoder();
			var locations = {{ locations|json_encode|raw }};

			map = new google.maps.Map(document.getElementById('map'), {
				mapTypeId: google.maps.MapTypeId.ROADMAP,
				streetViewControl: false,
				mapTypeControl: false,
				scrollwheel: false
			});
			
			var latlngbounds = new google.maps.LatLngBounds();

			$.each(locations, function(i, item){

				var coords = new google.maps.LatLng(item[0], item[1]);
				
				var marker = new google.maps.Marker({
					map: map,
					position: coords,
					icon: "{{ asset('bundles/design311website/img/marker.png')}}",
					dinnerId: i
				});
				markers.push(marker);
				latlngbounds.extend(coords);
				
			})

			if(navigator.geolocation) {
				navigator.geolocation.getCurrentPosition(function(position) {
					var currentPosition = new google.maps.LatLng(position.coords.latitude, position.coords.longitude);
					centerLocation(currentPosition);
				}, function() {
					// if failed
					showAllMarkers();
				});
			} else {
				// if no browser support
				showAllMarkers();
			}

			function showAllMarkers() {
				var markerCluster = new MarkerClusterer(map, markers);
				map.setCenter(latlngbounds.getCenter());
				map.fitBounds(latlngbounds);
			}

			function centerLocation(coords){
				var radius = 2500; //meter
				var circle = new google.maps.Circle({
					center: coords,
					radius: radius
				});
				
				map.fitBounds(circle.getBounds());
				map.setCenter(coords);
			}


			google.maps.event.addListener(map, 'bounds_changed', function() {
				var bounds = map.getBounds();
				var visibleDinners = [];
				for (var i=0; i<markers.length; i++){
					if( bounds.contains(markers[i].getPosition()) ){
						visibleDinners.push(markers[i].dinnerId);
					}
				}

				var tbody = $('#dinners tbody');
				tbody.empty();

				//TODO error message if no markers
				if (visibleDinners.length !== 0) {
					var dinners = {{dinners|serialize|raw}};
					$.each(dinners, function(i, dinner){
						if ($.inArray('' + dinner.id, visibleDinners) > -1) {
							var formattedDate = new Date(dinner.date);
							var d = formattedDate.getDate();
							var m =  formattedDate.getMonth();
							m += 1;  // JavaScript months are 0-11
							var y = formattedDate.getFullYear();
							tbody.append(' \
								<tr> \
									<td>'+d+'-'+m+'-'+y+'</td> \
									<td>'+dinner.title+'</td> \
									<td>'+dinner.address.city+'</td> \
									<td>'+dinner.price+'</td> \
								</tr>')
						};
					})
				};
			});

			$('#locatie').blur(function(){
				if ($(this).val()) {};

				var address = $(this).val();
				geocoder.geocode( { 'address': address}, function(results, status) {
					if (status == google.maps.GeocoderStatus.OK) {

						var latLng = results[0].geometry.location;
						centerLocation(latLng);
					}
					else {
						//TODO proper error message
						alert('Geocode was not successful for the following reason: ' + status);
					}
				});
			})
		});



	</script>
{% endblock %}