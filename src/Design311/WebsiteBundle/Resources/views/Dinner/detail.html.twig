{% extends 'Design311WebsiteBundle::layout.html.twig' %}

{% block content %}

<div id="map" class="map"></div>

<div class="container">
	<div class="one-third">
		<div class="widget">
			<h3>Algemene informatie</h3>
			<ul>
				<li>Organisator: {{dinner.user.displayName}}</li>
				<li>Maximum aantal personen: {{dinner.maxInvitees}}</li>
				<li>Prijs: â‚¬{{dinner.price}}</li>
				<li>Datum: {{dinner.date | date("m/d/Y") }}</li>
				<li>Tijdstip: {{dinner.date | date("G:i") }}</li>
			</ul>
		</div>
		<div class="widget">
			<h3>Deelnemers</h3>
			{% if dinner.participants|length > 0 %}
			<ul>
			{% for participant in dinner.participants %}
			    <li>{{participant.user.displayName}}</li>
			{% endfor %}
			</ul>
			{% else %}
			    <p>Momenteel zijn er nog geen deelnemers.</p>
			{% endif %}
		</div>
		{% if app.user == dinner.user %}
		<div class="widget">
			<h3>Verzoeken</h3>
			{% if dinner.participantRequests|length > 0 %}
			<ul>
			{% for request in dinner.participantRequests %}
			    <li>{{request.user.displayName}}</li>
			{% endfor %}
			</ul>
			{% else %}
			    <p>Momenteel zijn er geen deelname-verzoeken.</p>
			{% endif %}
		</div>
		{% endif %}
	</div>
	<div class="two-third main">
		<h1>{{dinner.title}}</h1>
		{{dinner.menu|markdown}}
		{% if app.user != dinner.user and app.user not in dinner.participants and app.user not in dinner.participantRequests %}
		<h2>Deelnemen</h2>
		<p>Krijg je al spontaan honger? Stel jezelf even kort voor aan de organisator.</p>
		{{ form(form) }}
		{% endif %}
	</div>
</div>

<a href="{{ path('design311website_dinners_invite', {'permalink': dinner.permalink}) }}">Uitnodigen</a>

{% endblock %}

{% block footer %}
    <script src="http://maps.google.com/maps/api/js?sensor=false"></script>
	<script src="{{ asset('bundles/design311website/js/jquery-ui/jquery-ui-1.10.4.slider.min.js') }}"></script>
	<link rel="stylesheet" href="{{ asset('bundles/design311website/js/jquery-ui/jquery-ui-1.10.4.slider.min.css') }}">
	<script type="text/javascript">

		$(function(){
			var map;
			var marker;
			var geocoder = new google.maps.Geocoder();
			var startMarker;

			var dinnerCoords = new google.maps.LatLng({{dinner.address.lat}}, {{dinner.address.lng}});

			map = new google.maps.Map(document.getElementById('map'), {
				mapTypeId: google.maps.MapTypeId.ROADMAP,
				streetViewControl: false,
				mapTypeControl: false,
				scrollwheel: false,
				zoom:16,
				center:dinnerCoords
			});
			
			var marker = new google.maps.Marker({
				map: map,
				position: dinnerCoords,
				icon: "{{ asset('bundles/design311website/img/marker.png')}}"
			});

			if(navigator.geolocation) {
				navigator.geolocation.getCurrentPosition(function(position) {
					var currentPosition = new google.maps.LatLng(position.coords.latitude, position.coords.longitude);
					displayRoute(currentPosition);
				});
			}

			function displayRoute(start){
				var directionsDisplay = new google.maps.DirectionsRenderer({suppressInfoWindows:true, suppressMarkers: true});
				var directionsService = new google.maps.DirectionsService();
				directionsDisplay.setMap(map);

				var request = {
					origin:start,
					destination:dinnerCoords,
					travelMode: google.maps.TravelMode.DRIVING
				};
				directionsService.route(request, function(response, status) {
					if (status == google.maps.DirectionsStatus.OK) {
						directionsDisplay.setDirections(response);
						startmarker = new google.maps.Marker({
							map: map,
							position: start,
							icon: "{{ asset('bundles/design311website/img/home-marker.png')}}"
						});
					}
				});
			}

			//idle fires once instead of bounds_changed firing all the time
			/*google.maps.event.addListener(map, 'idle', function() {
					displayDinners(dinners);
			});

			function displayDinners(dinners){
				tbody.empty();

				var bounds = map.getBounds();
				var visibleDinners = [];
				for (var i=0; i<markers.length; i++){
					if( bounds.contains(markers[i].getPosition()) ){
						visibleDinners.push(markers[i].dinnerId);
					}
				}

				if (visibleDinners.length !== 0) {
					dinnersTable.show();
					nonefound.hide();
					var detail = '{{ path('design311website_dinners_detail', {'permalink': 'permalink_holder'}) }}'
					var deelnemen = '{{ path('design311website_dinners_participate', {'permalink': 'permalink_holder'}) }}';
					$.each(dinners, function(i, dinner){
						if( bounds.contains(markers[i].getPosition()) ){
							var formattedDate = new Date(dinner.date);
							var d = formattedDate.getDate();
							var m =  formattedDate.getMonth();
							m += 1;  // JavaScript months are 0-11
							var y = formattedDate.getFullYear();
							detailLink = detail.replace('permalink_holder', dinner.permalink);
							deelnemenLink = deelnemen.replace('permalink_holder', dinner.permalink);
							tbody.append(' \
								<tr> \
									<td>'+d+'-'+m+'-'+y+'</td> \
									<td><a href="'+detailLink+'">'+dinner.title+'</a></td> \
									<td>'+dinner.address.city+'</td> \
									<td>'+dinner.price+'</td> \
									<td><a href="'+deelnemenLink+'">Deelnemen</a></td> \
								</tr>')
						}
					})
				}
				else{
					dinnersTable.hide();
					nonefound.show();
				}
			}

			$('#locatie').blur(function(){
				if ($(this).val()) {};

				var address = $(this).val();
				geocoder.geocode( { 'address': address}, function(results, status) {
					if (status == google.maps.GeocoderStatus.OK) {

						var latLng = results[0].geometry.location;
						centerLocation(latLng);
					}
					else {
						//TODO proper error message
						alert('Geocode was not successful for the following reason: ' + status);
					}
				});
			})

			$('#filters input').change(function(){

				var filters = {};
				$.each($('#filters input'), function(index, input) {
					if ($(input).is(':checkbox')) {
						if (input.checked) {
							if (typeof filters[input.name] == 'undefined') {
								filters[input.name] = [];
							}
							filters[input.name].push(input.value);
						};
					}
					else{
						filters[input.id] = input.value;
					}
				});

				console.log(filters);

				$.ajax({
					url: "{{path('design311website_dinners_filter')}}",
					type: "POST",
					data: filters,
					dataType: "JSON",
					success: function (data) {
						console.log(data);
						displayDinners(data);
					}
				});

				
			})*/
		});
	</script>
{% endblock %}